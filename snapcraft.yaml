name: chromium
adopt-info: chromium
summary: Chromium web browser, open-source version of Chrome
description: |
 An open-source browser project that aims to build a safer, faster, and more
 stable way for all Internet users to experience the web.
confinement: strict
base: core18

apps:
  chromium:
    command: bin/desktop-launch "$SNAP/bin/chromium.launcher"
    desktop: bin/chromium.desktop
    environment:
      DISABLE_WAYLAND: 1
      CHROME_DESKTOP: chromium.desktop
    plugs:
      - audio-playback
      - audio-record
      - camera
      - cups-control
      - desktop
      - gsettings
      - home
      - joystick
      - mount-observe
      - network
      - network-manager
      - opengl
      - password-manager-service
      - pulseaudio # remove once snapd 2.41 is available everywhere
      - raw-usb # for WebUSB (https://launchpad.net/bugs/1780678)
      - removable-media
      - screen-inhibit-control
      - u2f-devices
      - unity7 # required for xdg-open to work
      - upower-observe
      - x11
    slots:
      - mpris
  chromedriver:
    command: usr/lib/chromium-browser/chromedriver
    plugs:
      - network-bind
      # + all the plugs required by chromium, so that when chromedriver
      # executes chromium it inherits the correct set of permissions
      - audio-playback
      - audio-record
      - camera
      - cups-control
      - desktop
      - gsettings
      - home
      - joystick
      - mount-observe
      - network
      - network-manager
      - opengl
      - password-manager-service
      - pulseaudio # remove once snapd 2.41 is available everywhere
      - raw-usb
      - removable-media
      - screen-inhibit-control
      - u2f-devices
      - unity7
      - upower-observe
      - x11
    slots:
      - mpris

plugs:
  browser-sandbox:
    interface: browser-support
    allow-sandbox: true
  gtk-3-themes:
    interface: content
    target: $SNAP/data-dir/themes
    default-provider: gtk-common-themes
  icon-themes:
    interface: content
    target: $SNAP/data-dir/icons
    default-provider: gtk-common-themes
  sound-themes:
    interface: content
    target: $SNAP/data-dir/sounds
    default-provider: gtk-common-themes
  chromium-config:
    interface: personal-files
    read: [$HOME/.config/chromium, $HOME/.chromium-browser.init]

layout:
  /usr/lib/man-db:
    bind: $SNAP/usr/lib/man-db

parts:
  # Launchpad builders have a timeout for how long they are allowed to access
  # the internet (through a proxy) starting from the start of the build.
  # Since the chromium part takes a long time to build, we need to ensure
  # that all other parts that need to access the internet (to e.g. fetch build
  # or stage packages) are built before it (before the proxy authentication is
  # revoked).

  chromium-build:
    plugin: dump
    source: build
    organize:
      '*' : build/
    override-prime: ""

  chromium:
    plugin: nil
    source: https://commondatastorage.googleapis.com/chromium-browser-official/chromium-80.0.3987.163.tar.xz
    source-checksum: sha512/d6c25035870276cc0c8b9608ffd61cbc8d9c5beac3894163433d3b379b1c11ba00973c4268c2128a320407d2086d1c00b0896ec974a7575a4802ea0596d48a1c
    after: [chromium-build, gtk3-locales, launcher, manpage, gtk-key-themes, notify-send]
    build-packages:
      - quilt
      - wget
      - make
      - g++
      - autoconf
      - automake
      - ninja-build
      - pkg-config
      - lsb-release
      - python
      - bison
      - flex
      - gawk
      - git
      - gperf
      - subversion
      - cmake
      - sed
      - gzip
      - default-jre-headless
      - libxml2-dev
      - libpulse-dev
      - libcups2-dev
      - libasound2-dev
      - libnss3-dev
      - mesa-common-dev
      - libgles2-mesa-dev
      - libpci-dev
      - libxtst-dev
      - libxss-dev
      - libgtk-3-dev
      - libglib2.0-dev
      - libudev-dev
      - libdrm-dev
      - libcap-dev
      - libgcrypt-dev
      - libkrb5-dev
      - libxkbcommon-dev
      - libpam0g-dev
      - libffi-dev
      - uuid-dev
      - chrpath
      - yasm
      - libglib2.0-bin
      - shared-mime-info
      - zlib1g-dev
    stage-packages:
      - libgl1-mesa-glx
      - libgtk-3-0
      - libnss3
      - libsecret-1-0
      - libxss1
      - pulseaudio
      - shared-mime-info
      - ubuntu-settings
    override-pull: |
      set -eux
      snapcraftctl pull
      . chrome/VERSION
      snapcraftctl set-version "$MAJOR.$MINOR.$BUILD.$PATCH"
    override-build: |
      set -eux

      QUILT_PATCHES=$SNAPCRAFT_STAGE/build/patches quilt push -a

      # Get the Node.js binaries needed to build chromium's WebUI
      if [ $(arch) = "i686" ]; then
        # As of Node.js 10, Linux x86 is in the Experimental Tier
        # (see https://github.com/nodejs/node/blob/master/BUILDING.md#strategy),
        # meaning that upstream doesn't distribute binaries,
        # so we need to build them from source.
        cd third_party/node
        NODE_VERSION=$(grep NODE_VERSION= update_node_binaries | cut -d\" -f2)
        NODE_DIST_BASE_URL=$(grep BASE_URL= update_node_binaries | cut -d\" -f2)
        wget -O - $NODE_DIST_BASE_URL/$NODE_VERSION/node-$NODE_VERSION.tar.xz | tar -x --xz
        cd node-$NODE_VERSION
        ./configure --prefix=
        make -j$SNAPCRAFT_PARALLEL_BUILD_COUNT
        DESTDIR=$PWD/../linux/node-linux-x64 PREFIX= make install
        cd ../../..
      else
        third_party/node/update_node_binaries
      fi

      # Pre-built binaries are provided for eu-strip and clang on x86-64,
      # for all other architectures they have to be built from source.
      if [ $(arch) = "x86_64" ]; then
        tools/clang/scripts/update.py
      else
        cd buildtools/third_party/eu-strip
        ./build.sh
        cd ../../..
        tools/clang/scripts/build.py --bootstrap --disable-asserts --pgo --lto-lld --without-android --without-fuchsia --gcc-toolchain=/usr --use-system-cmake
      fi

      # Build GN
      export CXX=$PWD/third_party/llvm-build/Release+Asserts/bin/clang++
      export AR=$PWD/third_party/llvm-build/Release+Asserts/bin/llvm-ar
      tools/gn/bootstrap/bootstrap.py --skip-generate-buildfiles

      # Build chromium
      OUT=out/Release
      mkdir -p $OUT
      cp $SNAPCRAFT_STAGE/build/args.gn $OUT/
      $OUT/gn gen $OUT
      ninja -C $OUT chrome chrome_sandbox chromedriver

      # Strip debug symbols off the chrome binary
      python build/gn_run_binary.py ./buildtools/third_party/eu-strip/bin/eu-strip -o $OUT/chrome.stripped -f $OUT/chrome.debug $OUT/chrome
      mv $OUT/chrome.stripped $OUT/chrome

      # Install to $SNAPCRAFT_PART_INSTALL
      mkdir -p $SNAPCRAFT_PART_INSTALL
      cp chrome/app/theme/chromium/product_logo_256.png $SNAPCRAFT_PART_INSTALL/chromium.png
      T=$SNAPCRAFT_PART_INSTALL/usr/lib/chromium-browser
      mkdir -p $T
      cd $OUT
      cp chrome chromedriver chrome_*.pak headless_lib.pak icudtl.dat \
          libffmpeg.so resources.pak snapshot_blob.bin v8_context_snapshot.bin \
          $T/
      cp chrome_sandbox $T/chrome-sandbox
      mkdir $T/locales
      cp locales/*.pak $T/locales/
      if [ -d swiftshader ]; then
        # not built on arm*
        mkdir $T/swiftshader
        cp swiftshader/*.so $T/swiftshader/
      fi

      # Fix setuid bits on the sandbox executable
      # (ref: https://forum.snapcraft.io/t/call-for-testing-chromium-snap/1714/16)
      chmod 4555 $SNAPCRAFT_PART_INSTALL/usr/lib/chromium-browser/chrome-sandbox

      # Generate and install the man page (see the "manpage" part)
      mkdir -p $SNAPCRAFT_PART_INSTALL/man1
      sed \
          -e "s/@@PACKAGE@@/chromium/g" \
          -e "s/@@MENUNAME@@/chromium/g" \
          -e "s:\$HOME/.config:\$SNAP_USER_DATA/.config:g" \
          -e "s:\$HOME/.cache:\$SNAP_USER_COMMON/.cache:g" \
          $SNAPCRAFT_PART_SRC/chrome/app/resources/manpage.1.in \
          > $SNAPCRAFT_PART_INSTALL/man1/chrome.1
      gzip -9n $SNAPCRAFT_PART_INSTALL/man1/chrome.1

      # Add data-dir mount layout to the snap as a temporary workaround until
      # https://github.com/snapcore/snapd/pull/5395 lands in snapd.
      mkdir -p $SNAPCRAFT_PART_INSTALL/data-dir/icons
      mkdir -p $SNAPCRAFT_PART_INSTALL/data-dir/sounds
      mkdir -p $SNAPCRAFT_PART_INSTALL/data-dir/themes
    prime:
      - -etc/gss
      - -etc/init.d
      - -etc/sensors.d
      - -etc/ucf.conf
      - -etc/xdg
      - -usr/include
      - -usr/lib/tmpfiles.d
      - -usr/share/apport
      - -usr/share/bash-completion
      - -usr/share/bug
      - -usr/share/doc
      - -usr/share/doc-base
      - -usr/share/gettext
      - -usr/share/gnome-control-center
      - -usr/share/GConf
      - -usr/share/icons
      - -usr/share/lintian
      - -usr/share/man
      - -usr/share/pam-configs
      - -usr/share/pkgconfig
      - -usr/share/polkit-1
      - -usr/share/session-migration
      - -usr/share/sounds
      - -usr/share/ubuntu
      - -usr/share/ubuntu-wayland
      - -usr/share/upstart
      - -usr/share/zsh
      - -var

  launcher:
    after: [desktop-gtk3]
    plugin: dump
    source: launcher
    organize:
      '*': bin/

  notify-send:
    plugin: nil
    stage-packages:
      - libnotify-bin
    prime:
      - -usr/share

  desktop-gtk3:
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-subdir: gtk
    plugin: make
    make-parameters: ["FLAVOR=gtk3"]
    build-packages:
      - build-essential
      - libgtk-3-dev
    stage-packages:
      - libxkbcommon0
      - ttf-ubuntu-font-family
      - shared-mime-info
      - libgtk-3-0
      - libgdk-pixbuf2.0-0
      - libglib2.0-bin
      - libgtk-3-bin
      - unity-gtk3-module
      - libappindicator3-1
      - locales-all
      - xdg-user-dirs
      - ibus-gtk3
      - libibus-1.0-5
      - fcitx-frontend-gtk3
    prime:
      - -etc/gss
      - -etc/presage.xml
      - -etc/ucf.conf
      - -etc/X11
      - -usr/lib/glib-networking
      - -usr/lib/systemd
      - -usr/share/apport
      - -usr/share/bash-completion
      - -usr/share/doc
      - -usr/share/doc-base
      - -usr/share/gettext
      - -usr/share/GConf
      - -usr/share/icons
      - -usr/share/lintian
      - -usr/share/man
      - -usr/share/pkgconfig
      - -usr/share/presage
      - -usr/share/upstart
      - -var

  tests:
    plugin: dump
    source: tests
    organize:
      '*': tests/

  # Stage packages required for the "man" binary, which is invoked when
  # chromium is called with the "-h" (or "--help") argument
  # (see https://launchpad.net/bugs/1848083).
  manpage:
    plugin: nil
    stage-packages:
      - groff-base
      - libgdbm5
      - libpipeline1
      - man-db
    prime:
      - -etc
      - -usr/lib/tmpfiles.d
      - -usr/share/bug
      - -usr/share/calendar
      - -usr/share/doc
      - -usr/share/doc-base
      - -usr/share/lintian
      - -usr/share/man
      - -usr/share/man-db
      - -var

  shared-mime-info:
    after: [launcher, chromium]
    plugin: nil
    override-pull: ""
    override-prime: |
      set -eux
      glib-compile-schemas usr/share/glib-2.0/schemas
      update-mime-database usr/share/mime

  # Install the keybindings themes (see https://launchpad.net/bugs/1849163)
  gtk-key-themes:
    plugin: nil
    stage-packages:
      - libgtk-3-common
    prime:
      - usr/share/themes/Default/
      - usr/share/themes/Emacs/

  # In Ubuntu compiled locales for GTK are installed by langpacks, not by
  # libgtk-3-common. Fetch all the langpacks and keep only the GTK locales.
  gtk3-locales:
    plugin: nil
    source: empty # work around a snapcraft 2.x bug
    build-packages:
      - apt
      - dpkg
    override-pull: |
      set -eux
      apt download "language-pack-gnome-*-base"
    override-build: |
      set -eux
      for deb in *.deb; do dpkg-deb -x $deb .; done
      find usr/share/locale-langpack -type f -not -name "gtk30*.mo" -exec rm '{}' \;
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/share
      cp -R usr/share/locale-langpack $SNAPCRAFT_PART_INSTALL/usr/share/

  # Create a symlink xdg-email -> xdg-open, as the latter is perfectly able to
  # handle mailto: URLs (see https://launchpad.net/bugs/1849774).
  # xdg-open is a wrapper provided by the core snap.
  xdg-email:
    plugin: nil
    override-pull: ""
    override-prime: |
      set -eux
      mkdir -p usr/bin
      cd usr/bin
      ln -s /usr/bin/xdg-open xdg-email
