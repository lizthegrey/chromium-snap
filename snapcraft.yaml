name: chromium
version: 72.0.3626.109
summary: Chromium web browser, open-source version of Chrome
description: |
 An open-source browser project that aims to build a safer, faster, and more
 stable way for all Internet users to experience the web.
confinement: strict
base: core18

apps:
  chromium:
    command: $SNAP/bin/chromium.launcher
    desktop: bin/chromium.desktop
    extensions: [ gnome ]
    environment:
      DISABLE_WAYLAND: 1
      CHROME_DESKTOP: chromium.desktop
    plugs:
      - browser-sandbox
      - camera
      - cups-control
      - desktop
      - gsettings
      - home
      - mount-observe
      - network
      - network-manager
      - opengl
      - password-manager-service
      - pulseaudio
      - removable-media
      - screen-inhibit-control
      - u2f-devices
      - unity7 # required for xdg-open to work
      - upower-observe
      - x11

plugs:
  browser-sandbox:
    interface: browser-support
    allow-sandbox: true

parts:
  # Launchpad builders have a timeout for how long they are allowed to access
  # the internet (through a proxy) starting from the start of the build.
  # Since the chromium part takes a long time to build, we need to ensure
  # that all other parts that need to access the internet (to e.g. fetch build
  # or stage packages) are built before it (before the proxy authentication is
  # revoked).

  chromium-build:
    plugin: dump
    source: build
    organize:
      '*' : build/
    override-prime: ""

  chromium:
    plugin: nil
    source: https://commondatastorage.googleapis.com/chromium-browser-official/chromium-72.0.3626.109.tar.xz
    source-checksum: sha512/1eb681d085657c7ae3485164f8e2e80c12f65361072f0101d3659c6161e2bf1d647226e98860cbcda8ff1f44542ac32508eb19f3a645886e87c37fae6affeb1c
    after: [chromium-build, gtk3-locales, launcher]
    build-packages:
      - quilt
      - autoconf
      - automake
      - ninja-build
      - pkg-config
      - lsb-release
      - python
      - bison
      - flex
      - gawk
      - git
      - gperf
      - subversion
      - cmake
      - default-jre-headless
      - libxml2-dev
      - libpulse-dev
      - libcups2-dev
      - libasound2-dev
      - libnss3-dev
      - mesa-common-dev
      - libgles2-mesa-dev
      - libpci-dev
      - libxtst-dev
      - libxss-dev
      - libgtk-3-dev
      - libglib2.0-dev
      - libgnome-keyring-dev
      - libudev-dev
      - libdrm-dev
      - libcap-dev
      - libgcrypt-dev
      - libkrb5-dev
      - libxkbcommon-dev
      - libpam0g-dev
      - libffi-dev
      - uuid-dev
      - chrpath
      - yasm
      - libglib2.0-bin
      - shared-mime-info
      - zlib1g-dev
    stage-packages:
      - libgl1-mesa-glx
      - libgnome-keyring0
      - libgtk-3-0
      - libnss3
      - libsecret-1-0
      - libxss1
      - pulseaudio
      - shared-mime-info
      - ubuntu-settings
    override-build: |
      set -eux

      QUILT_PATCHES=$SNAPCRAFT_STAGE/build/patches quilt push -a

      # Pre-built binaries are provided for eu-strip and clang on x86-64,
      # for all other architectures they have to be built from source.
      if [ $(arch) = "x86_64" ]; then
        tools/clang/scripts/update.py
      else
        cd third_party/eu-strip
        ./build.sh
        cd ../..
        tools/clang/scripts/update.py --force-local-build --without-android --without-fuchsia --gcc-toolchain=/usr --use-system-cmake
      fi

      # Build GN
      export CXX=$PWD/third_party/llvm-build/Release+Asserts/bin/clang++
      export AR=$PWD/third_party/llvm-build/Release+Asserts/bin/llvm-ar
      tools/gn/bootstrap/bootstrap.py --skip-generate-buildfiles

      # Build chromium
      OUT=out/Release
      mkdir -p $OUT
      cp $SNAPCRAFT_STAGE/build/args.gn $OUT/
      $OUT/gn gen $OUT
      ninja -C $OUT chrome chrome_sandbox chromedriver

      # Strip debug symbols off the chrome binary
      python build/gn_run_binary.py ./third_party/eu-strip/bin/eu-strip -o $OUT/chrome.stripped -f $OUT/chrome.debug $OUT/chrome
      mv $OUT/chrome.stripped $OUT/chrome

      # Install to $SNAPCRAFT_PART_INSTALL
      mkdir -p $SNAPCRAFT_PART_INSTALL
      cp chrome/app/theme/chromium/product_logo_256.png $SNAPCRAFT_PART_INSTALL/chromium.png
      T=$SNAPCRAFT_PART_INSTALL/usr/lib/chromium-browser
      mkdir -p $T
      cd $OUT
      cp chrome chrome_*.pak headless_lib.pak icudtl.dat \
          libffmpeg.so natives_blob.bin resources.pak \
          snapshot_blob.bin v8_context_snapshot.bin \
          $T/
      cp chrome_sandbox $T/chrome-sandbox
      mkdir $T/locales
      cp locales/*.pak $T/locales/
      if [ -d swiftshader ]; then
        # not built on arm*
        mkdir $T/swiftshader
        cp swiftshader/*.so $T/swiftshader/
      fi

      # Fix setuid bits on the sandbox executable
      # (ref: https://forum.snapcraft.io/t/call-for-testing-chromium-snap/1714/16)
      chmod 4555 $SNAPCRAFT_PART_INSTALL/usr/lib/chromium-browser/chrome-sandbox

  launcher:
    plugin: dump
    source: launcher
    organize:
      '*': bin/

  shared-mime-info:
    after: [launcher, chromium]
    plugin: nil
    override-pull: ""
    override-prime: |
      set -eux
      glib-compile-schemas usr/share/glib-2.0/schemas
      update-mime-database usr/share/mime

      # Remove unneeded stage files to save space
      cd usr/share
      rm -rf apport bash-completion bug doc doc-base icons lintian man pam-configs pkgconfig themes upstart zsh

  # In Ubuntu compiled locales for GTK are installed by langpacks, not by
  # libgtk-3-common. Fetch all the langpacks and keep only the GTK locales.
  gtk3-locales:
    plugin: nil
    source: empty # work around a snapcraft 2.x bug
    build-packages:
      - apt
      - dpkg
    override-pull: |
      set -eux
      apt download "language-pack-gnome-*-base"
    override-build: |
      set -eux
      for deb in *.deb; do dpkg-deb -x $deb .; done
      find usr/share/locale-langpack -type f -not -name "gtk30*.mo" -exec rm '{}' \;
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/share
      cp -R usr/share/locale-langpack $SNAPCRAFT_PART_INSTALL/usr/share/
