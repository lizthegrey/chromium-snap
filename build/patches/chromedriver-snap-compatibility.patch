Description: overwrite the binary location of the chromium executable in the
 options passed to chromedriver, to ensure the snapped version is used (because
 a strictly confined chromedriver cannot see chromium at e.g.
 /usr/bin/chromium-browser, even when that is a wrapper for the snap). This is
 for compatibility with existing chromedriver scripts. Newly written scripts
 should simply not specify a binary location and let chromedriver find it
 automatically.
Author: Olivier Tilloy <olivier.tilloy@canonical.com>

--- a/chrome/test/chromedriver/chrome_launcher.cc
+++ b/chrome/test/chromedriver/chrome_launcher.cc
@@ -111,6 +111,8 @@ Status PrepareDesktopCommandLine(const C
                                  std::vector<std::string>* extension_bg_pages,
                                  base::FilePath* user_data_dir) {
   base::FilePath program = capabilities.binary;
+  if (program == base::FilePath("/usr/bin/chromium-browser"))
+    program.clear();
   if (program.empty()) {
     if (!FindChrome(&program))
       return Status(kUnknownError, base::StringPrintf("cannot find %s binary",
--- a/chrome/test/chromedriver/chrome/chrome_finder.cc
+++ b/chrome/test/chromedriver/chrome/chrome_finder.cc
@@ -132,6 +132,12 @@ void GetApplicationDirs(std::vector<base
 #endif
 
 bool FindChrome(base::FilePath* browser_exe) {
+  *browser_exe = base::FilePath("/snap/chromium/current/command-chromium.wrapper");
+  if (base::PathExists(*browser_exe))
+    return true;
+  else
+    browser_exe->clear();
+
   base::FilePath browser_exes_array[] = {
 #if defined(OS_WIN) || defined(OS_MACOSX)
     base::FilePath(chrome::kBrowserProcessExecutablePath),
